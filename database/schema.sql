--Users table
create table public."Users" (
  id bigint generated by default as identity not null,
  name text not null,
  auth_user uuid not null,
  constraint users_pkey primary key (id),
  constraint users_name_key unique (name),
  constraint Users_auth_user_fkey foreign KEY (auth_user) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;


--Transactions table
create table public."Transactions" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  user_id bigint not null,
  account_id bigint not null,
  category_id bigint not null,
  amount numeric not null,
  date date not null,
  description text null,
  constraint Transactions_pkey primary key (id),
  constraint Transactions_account_id_fkey foreign KEY (account_id) references "Accounts" (id),
  constraint Transactions_category_id_fkey foreign KEY (category_id) references "Categories" (id),
  constraint Transactions_user_id_fkey foreign KEY (user_id) references "Users" (id) on delete CASCADE
) TABLESPACE pg_default;


--Categories table
create table public."Categories" (
  id bigint generated by default as identity not null,
  category text not null,
  created_at timestamp with time zone not null default now(),
  type text not null,
  constraint Categories_pkey primary key (id),
  constraint Categories_category_check check (
    (
      category = any (
        array[
          'housing'::text,
          'groceries'::text,
          'transportation'::text,
          'health'::text,
          'entertainment'::text,
          'clothing'::text,
          'other'::text
        ]
      )
    )
  ),
  constraint Categories_type_check check (
    (
      type = any (array['income'::text, 'expense'::text])
    )
  )
) TABLESPACE pg_default;


--Accounts table
create table public."Accounts" (
  id bigint generated by default as identity not null,
  user_id bigint not null,
  name text not null,
  type text not null,
  created_at timestamp with time zone not null default now(),
  is_active boolean not null default true,
  balance numeric not null,
  constraint Accounts_pkey primary key (id),
  constraint Accounts_user_id_fkey foreign KEY (user_id) references "Users" (id) on delete CASCADE,
  constraint Accounts_type_check check (
    (
      type = any (
        array[
          'Cash'::text,
          'debit'::text,
          'credit'::text,
          'savings'::text,
          'investments'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;


--Account_transfer table
create table public."Account_transfer" (
  id bigint generated by default as identity not null,
  user_id bigint not null,
  from_account_id bigint not null,
  to_account_id bigint not null,
  amount numeric not null,
  date date not null,
  created_at timestamp with time zone not null default now(),
  constraint Account_transfer_pkey primary key (id),
  constraint Account_transfer_from_account_id_fkey foreign KEY (from_account_id) references "Accounts" (id),
  constraint Account_transfer_to_account_id_fkey foreign KEY (to_account_id) references "Accounts" (id),
  constraint Account_transfer_user_id_fkey foreign KEY (user_id) references "Users" (id) on delete CASCADE
) TABLESPACE pg_default;